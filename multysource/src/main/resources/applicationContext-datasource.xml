<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"

       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd

       ">

       <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
              <property name="locations" value="classpath*:datasource.properties"/>
       </bean>


       <bean id="abstractXADataSource" class="com.atomikos.jdbc.AtomikosDataSourceBean"
             init-method="init" destroy-method="close" abstract="true">
              <property name="xaDataSourceClassName" value="${jdbc.xaDataSourceClassName}"/>
           <!-- SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana]  -->

              <property name="poolSize" value="10" />

              <property name="minPoolSize" value="10"/>
              <property name="maxPoolSize" value="30"/>
              <property name="borrowConnectionTimeout" value="60"/>
              <property name="reapTimeout" value="20"/>
              <property name="maxIdleTime" value="60"/>
              <property name="maintenanceInterval" value="60"/>
              <property name="loginTimeout" value="60"/>
              <property name="testQuery" value="${validationQuery}"/>
       </bean>

    <bean id="goodsDataSource" parent="abstractXADataSource">
        <property name="uniqueResourceName" value="goodsDataSource" />
        <property name="xaProperties">
            <props>
                <prop key="driverClassName">${jdbc.driver}</prop>
                <prop key="url">${goodsDataSource.url}</prop>
                <prop key="password">${goodsDataSource.password}</prop>
                <!--  <prop key="user">${jdbc.username}</prop> --> <!-- mysql -->
                <prop key="username">${goodsDataSource.username}</prop>   <!-- durid -->
                <prop key="initialSize">0</prop>
                <prop key="maxActive">20</prop> <!-- 若不配置则代码执行"{dataSource-1} inited"此处停止  -->
                <prop key="minIdle">0</prop>
                <prop key="maxWait">60000</prop>
                <prop key="validationQuery">${validationQuery}</prop>
                <prop key="testOnBorrow">false</prop>
                <prop key="testOnReturn">false</prop>
                <prop key="testWhileIdle">true</prop>
                <prop key="removeAbandoned">true</prop>
                <prop key="removeAbandonedTimeout">1800</prop>
                <prop key="logAbandoned">true</prop>
                <prop key="filters">mergeStat</prop>
            </props>
        </property>
    </bean>

    <bean id="customerDataSource" parent="abstractXADataSource">
        <property name="uniqueResourceName" value="customerDataSource" />
        <property name="xaProperties">
            <props>
                <prop key="driverClassName">${jdbc.driver}</prop>
                <prop key="url">${customerDataSource.url}</prop>
                <prop key="password">${customerDataSource.password}</prop>
                <!--  <prop key="user">${jdbc.username}</prop> -->
                <prop key="username">${customerDataSource.username}</prop>
                <prop key="initialSize">0</prop>
                <prop key="maxActive">20</prop>
                <prop key="minIdle">0</prop>
                <prop key="maxWait">60000</prop>
                <prop key="validationQuery">${validationQuery}</prop>
                <prop key="testOnBorrow">false</prop>
                <prop key="testOnReturn">false</prop>
                <prop key="testWhileIdle">true</prop>
                <prop key="removeAbandoned">true</prop>
                <prop key="removeAbandonedTimeout">1800</prop>
                <prop key="logAbandoned">true</prop>
                <prop key="filters">mergeStat</prop>
            </props>
        </property>
    </bean>

       <!--<bean id="parentDataSource" class="com.atomikos.jdbc.AtomikosDataSourceBean" destroy-method="close" lazy-init="false">
              <property name="driverClassName" value="${jdbc.driver}" />
              <property name="initialSize" value="1" />
              <property name="maxActive" value="50" />
              <property name="maxWait" value="30000" />
              <property name="filters" value="stat,wall" />
              <property name="timeBetweenEvictionRunsMillis" value="3000" />
              <property name="minEvictableIdleTimeMillis" value="300000" />
              <property name="validationQuery" value="SELECT 'x'" />
              <property name="testWhileIdle" value="true" />
              <property name="testOnBorrow" value="false" />
              <property name="testOnReturn" value="false" />
              <property name="poolPreparedStatements" value="true" />
              <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
       </bean>

       <bean id="goodsDataSource" class="com.alibaba.druid.pool.DruidDataSource" parent="parentDataSource">
              <property name="url" value="${goodsDataSource.url}"/>
              <property name="username" value="${goodsDataSource.username}"/>
              <property name="password" value="${goodsDataSource.password}"/>
       </bean>
       <bean id="customerDataSource" class="com.alibaba.druid.pool.DruidDataSource" parent="parentDataSource">
              <property name="url" value="${customerDataSource.url}"/>
              <property name="username" value="${customerDataSource.username}"/>
              <property name="password" value="${customerDataSource.password}"/>
       </bean>-->

       <bean id="goodsJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
            <property name="dataSource" ref="goodsDataSource"/>
       </bean>

       <bean id="customerJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
            <property name="dataSource" ref="customerDataSource"/>
       </bean>

</beans>